# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      debug_enabled:
        description: 'Run the build with tmate debugging enabled (https://github.com/marketplace/actions/debugging-with-tmate)'     
        required: false
        default: false

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-and-unit-test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.8]
        poetry-version: [1.1.6]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v2
      - name: Configure GPG Key
        run: |
          echo -n "$GPG_KEY" | base64 --decode | gpg --import
        env:
          GPG_KEY: ${{ secrets.GPG_KEY }}
      - name: Reveal secrets
        run: |
          sudo apt install git-secret
          git-secret reveal
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Setup poetry
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: ${{ matrix.poetry-version }}
      - name: Install dependencies
        run: poetry install
      - name: Lint and style check with flake8 and black
        run: poetry run flake8 && poetry run black --check .
      - name: Build docker stack
        run: make setup
      - name: Run unit tests
        run: make unittest
  integration-tests:
    # this workflow runs tests on the full docker stack
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v2
      - name: Configure GPG Key
        run: |
          echo -n "$GPG_KEY" | base64 --decode | gpg --import
        env:
          GPG_KEY: ${{ secrets.GPG_KEY }}
      - name: Reveal secrets
        run: |
          sudo apt install git-secret
          git-secret reveal
      - name: Build docker stack
        run: make setup
      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.debug_enabled }}
      - name: Check running containers
        run: docker ps
      - name: Run tests
        run: make integrationtest
